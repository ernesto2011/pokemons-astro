---
import type { GetStaticPaths } from "astro";
import MainLayout from "@layouts/MainLayout.astro";
import Card from "@components/Card.astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list-response";
import Title from "@components/shared/Title.astro";
import { Icon } from "astro-icon/components";
export const getStaticPaths = (async () => {
  const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const { results } = (await resp.json()) as PokemonListResponse;

  return results.map(({ name, url }) => ({
    params: { name },
    props: { name, url },
  }));
}) satisfies GetStaticPaths;
const { url } = Astro.props;
const { name } = Astro.params;
const id = url.split("/").at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const imgSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`
---

<MainLayout 
    title={`Pokémon - #${id} ${name}`}
    description={`Información del pokékom ${name}`}
    image={imgSrc}
>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <div class="flex flex-row gap-4 items-center justify-center">
      <div>
        <button class="text-blue-500" onclick="history.back()">Regresar</button>
        <Title>{name}</Title>
      </div>
      <button id="btn-favorite" class="" data-name={name} data-id={id}>
        <Icon data-outline name='heart-outline' size={50}/>
        <Icon data-full class="hidden" name='heart' size={50}/>
      </button>
    </div>
    <Card name={name} url={url} isbig />
    <audio controls class="mt-5">
      <source src={audioSrc} type="audio/ogg" />
    </audio>
  </section>
</MainLayout>

<script>
  import type { FavoritePokemon } from "@interfaces/favorite-pokemon";
  // interface FavoritePokemon {
  //   name: string;
  //   id: string
  // }
  const handlePageLoad =() =>{
    let favoritePokemons: FavoritePokemon[] = JSON.parse(localStorage.getItem('favorites')?? '[]');
    const btnFavorite= document.querySelector('#btn-favorite') as HTMLButtonElement
    
    if(!btnFavorite) return;

    const name = btnFavorite.dataset.name ?? ''
    const id = btnFavorite.dataset.id ?? ''
    const heartOutline = btnFavorite.querySelector('[data-outline]') as HTMLElement;
    const heartFull = btnFavorite.querySelector('[data-full]') as HTMLElement;
    
    //funcion para verificar si el pokemon esta en favorites de localstorage yc ambair el heart
    const isFavorite = favoritePokemons.some(fav => fav.name === name);
  
      if(isFavorite){
        heartOutline.classList.add('hidden');
        heartFull.classList.remove('hidden')
      }else{
        heartOutline.classList.remove('hidden');
        heartFull.classList.add('hidden')
      }
  

    const toggleFavorite=()=>{
      const isFavorite = favoritePokemons.some(fav => fav.name === name);
      if (isFavorite) {
        favoritePokemons = favoritePokemons.filter(fav => fav.name !== name);
      }else{
        favoritePokemons.push({
          id: id,
          name: name
        })
      }
      localStorage.setItem('favorites', JSON.stringify(favoritePokemons))
    }
    btnFavorite.addEventListener('click',()=>{
      heartOutline.classList.toggle('hidden');
      heartFull.classList.toggle('hidden')
      toggleFavorite();
    })
  }

  document.addEventListener('astro:page-load', handlePageLoad)
  
</script>

<style>
#btn-favorite {
  @apply hover:animate-pulse;
}
</style>
